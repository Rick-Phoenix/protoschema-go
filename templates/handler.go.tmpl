package handlers

{{ template "imports" .Imports }}


type {{ .ResourceName }}Service struct {
	Store *db.Store
}

func New{{ .ResourceName }}Service(s *db.Store) *{{ .ResourceName }}Service {
	return &{{ .ResourceName }}Service{Store: s}
}

{{ $resName := .ResourceName }}
{{ $genPkg := .GenPkg }}

{{ range .Handlers }}

func (s *{{ $resName }}Service) {{ .Name }}(
	ctx context.Context,
  req *connect.Request[{{ $genPkg }}.{{ .Request }}],
) (*connect.Response[{{ $genPkg }}.{{ .Response }}], error) {

	, err := s.Store.(ctx, )
	if err != nil {
		return nil, connect.NewError(connect.CodeNotFound, err)
	}

  return connect.NewResponse(&{{ $genPkg }}.{{ .Response }}{

	}), nil
}

{{ end }}
